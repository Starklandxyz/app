query getAllPlayers {
  entities(offset:0, limit: 1000 keys: ["%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Player {
            owner
            nick_name
            joined_time
          }
          __typename
          ... on ETH {
            owner
            balance
          }
        }
      }
    }
  }
}

query getAirdropByKey($map_id:String, $key: String) {
  entities(first:1000, keys: [$map_id,$key,"%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Airdrop {
            map_id
            owner
            index
            claimed
          }
        }
      }
    }
  }
}


query getBaseByKey($key: String,$map_id:String) {
  entities(first:1000, keys: [$map_id,$key]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on HBase {
            map_id
            owner
            x
            y
          }
          __typename
          ... on FortOwner {
            map_id
            owner
            total
          }
        }
      }
    }
  }
}

query getUserWarriorByKey($key: String,$map_id:String) {
  entities(first:1000, keys: [$map_id,$key]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on UserWarrior {
            map_id
            owner
            balance
          }
          __typename
          ... on LuckyPack {
            map_id
            owner
            balance
          }
          __typename
          ... on RewardPoint {
            map_id
            owner
            balance
          }
        }
      }
    }
  }
}


query getWarriorConfig($map_id:String) {
  entities(first:1000, keys: [$map_id]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on WarriorConfig {
            map_id
            Train_Food
            Train_Gold
            Train_Iron
            Train_Time
            Troop_Food
            Troop_Iron
            Troop_Gold
            Troop_Speed
          }
        }
      }
    }
  }
}

query getAirdropConfig($map_id:String) {
  entities(first:1000, keys: [$map_id,"%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on AirdropConfig {
            map_id
            index
            reward_warrior
            reward_food
            reward_gold
            reward_iron
          }
        }
      }
    }
  }
}

query getWarriorByLocation($map_id:String,$x:String,$y:String) {
  entities(first:1000, keys: [$map_id,$x,$y]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Warrior {
            map_id
            x,
            y,
            balance
          }
        }
      }
    }
  }
}


query getTrainingByKey($key: String,$map_id:String) {
  entities(first:1000, keys: [$map_id,$key]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Training {
            start_time,
            total,
            out
          }
        }
      }
    }
  }
}

query getAllBase($map_id:String) {
  entities(first:1000, keys: [$map_id,"%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on HBase {
            owner
            map_id
            x
            y
          }
          __typename
          ... on LandOwner {
            owner
            map_id
            total
          }
          __typename
          ... on RewardPoint {
            map_id
            owner
            balance
          }
          __typename
          ... on UserWarrior {
            map_id
            owner
            balance
          }
        }
      }
    }
  }
}



query getLandByKey($map_id:String,$x:String,$y:String) {
  entities(first:1, keys: [$map_id,$x,$y]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Land {
            map_id,
            x,
            y,
            owner,
            building,
            level
          }
          __typename
          ... on Warrior {
            map_id,
            x,
            y,
            balance
          }
           __typename
          ... on LandCost {
            map_id,
            x,
            y,
            cost_gold
            cost_iron
            cost_food
          }
        }
      }
    }
  }
}

query getAllLands($map_id:String) {
  entities(first:1000, keys: [$map_id,"%","%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Land {
            map_id,
            x,
            y,
            owner,
            building,
            level
            
          }
          __typename
          ... on LandMiner {
            map_id,
            x,
            y,
            miner_x,
            miner_y
          }
          __typename
          ... on LandMining {
            map_id,
            x,
            y,
            start_time,
            mined_x
            mined_y
          }
          __typename
          ... on Warrior {
            map_id,
            x,
            y,
            balance
          }
          __typename
          ... on UpgradeCost {
            map_id,
            x,
            y,
            start_time
            end_time
            target_level
            claimed
          }
           __typename
          ... on LandCost {
            map_id,
            x,
            y,
            cost_gold
            cost_iron
            cost_food
          }
        }
      }
    }
  }
}

query getETHByKey($key: String) {
  entities(first:1000, keys: [$key]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on ETH {
            balance
          }
        }
      }
    }
  }
}

query getLandMinerByKey($map_id: String,$x:String,$y:String) {
  entities(first:1000, keys: [$map_id,$x,$y]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on LandMiner {
            map_id
            x
            y
            miner_x
            miner_y
          }
        }
      }
    }
  }
}

query getResoucesByKey($map_id:String,$key: String) {
  entities(first:1000, keys: [$map_id,$key]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Food {
            map_id
            owner
            balance
          }
          __typename
          ... on Gold {
            map_id
            owner
            balance
          }
          __typename
          ... on Iron {
            map_id
            owner
            balance
          }
        }
      }
    }
  }
}

query getBuildPrice($map_id:String) {
  entities(first:1000, keys: [$map_id,"%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on BuildPrice {
            map_id
            build_type
            gold
            food
            iron
          }
        }
      }
    }
  }
}

query getTroopsByKey($map_id:String,$key: String) {
  entities(first:1000, keys: [$map_id,$key,"*"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Troop {
            map_id
            owner
            index
            balance
            from_x
            from_y
            to_x
            to_y
            start_time
            distance
          }
        }
      }
    }
  }
}


query getAllTroops($map_id:String) {
  entities(first:1000, keys: [$map_id,"%","%"]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Troop {
            map_id
            owner
            index
            balance
            from_x
            from_y
            to_x
            to_y
            start_time
            distance
            retreat
          }
        }
      }
    }
  }
}


query getMiningConfig($map_id:String) {
  entities(first:1000, keys: [$map_id]) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on MiningConfig {
            map_id
            Food_Speed
            Iron_Speed
            Gold_Speed
            Base_Gold_Speed
          }
        }
      }
    }
  }
}


query getLandMiner($keys:[String]) {
  entities(first:1000, keys: $keys) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on LandMiner {
            map_id
            x
            y
            miner_x
            miner_y
          }
        }
      }
    }
  }
}


query getLand($keys:[String]) {
  entities(first:1000, keys: $keys) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Land{
            map_id
            x
            y
            owner
            building
            level
          }
        }
      }
    }
  }
}

query getPlayer($keys:[String]) {
  entities(first:1000, keys: $keys) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Player{
            owner
            nick_name
            joined_time
          }
        }
      }
    }
  }
}

query getTroop($keys:[String]) {
  entities(first:1000, keys: $keys) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Troop{
            map_id
            owner
            index
            balance
            from_x
            from_y
            to_x
            to_y
            start_time
            distance
            retreat
          }
        }
      }
    }
  }
}


query getWarrior($keys:[String]) {
  entities(first:1000, keys: $keys) {
    total_count
    edges {
      node {
        keys
        models {
          __typename
          ... on Warrior{
            map_id
            x
            y
            balance
          }
        }
      }
    }
  }
}

